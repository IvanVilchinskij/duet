{"version":3,"sources":["webpack:///src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?6d38","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?648f","webpack:///./src/plugins/ObjectModelBrowser/ObjectModelBrowser.vue?7c10","webpack:///./src/plugins/ObjectModelBrowser/index.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","ref","attrs","active","length","modelTree","on","$event","scopedSlots","_u","key","fn","item","_v","_s","getLabel","type","_e","staticClass","uiFrozen","refresh","$t","apiFileError","apiDocumentation","apiDocumentationSummary","domProps","apiDocumentationRemarks","staticRenderFns","collection","collectionStrong","module","exports","init","Set","arguments","undefined","provide","treeview","props","default","dense","filter","hoverable","items","multipleActive","open","openAll","returnObject","search","data","level","activeCache","nodes","openCache","selectedCache","computed","excludedItems","excluded","i","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","created","getValue","map","mounted","$slots","prepend","methods","updateAll","keys","children","buildTree","parent","oldNode","hasOwnProperty","isSelected","isIndeterminate","isActive","isOpen","vnode","node","c","calculateState","selectionType","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","v","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","genChild","h","class","themeClasses","baseMixins","VTreeviewNodeProps","activatable","activeClass","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","validator","includes","VTreeviewNode","inject","parentIsDisabled","hasLoaded","isLoading","disabled","child","text","scopedProps","leaf","selected","indeterminate","computedIcon","hasChildren","beforeDestroy","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","genPrependSlot","genAppendSlot","append","genContent","genToggle","click","e","genCheckbox","genLevel","genNode","setTextColor","genChildrenWrapper","genTransition","String","match","filterTreeItems","component","VAlert","VBtn","VCard","VChip","VCol","VIcon","VRow","VTreeview","Scroll","registerRoute","ObjectModelBrowser","Settings","ObjectModel","icon","caption","path"],"mappings":"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","file":"js/ObjectModelBrowser.1c0c1c36.js","sourcesContent":["<template>\n\t<v-row v-scroll=\"onScroll\">\n\t\t<v-col ref=\"leftContainer\" :cols=\"(active.length === 0) ? 12 : 6\">\n\t\t\t<v-treeview :items=\"modelTree\" open-on-click activatable :active.sync=\"active\">\n\t\t\t\t<template #label=\"{ item }\">\n\t\t\t\t\t{{ item.getLabel ? item.getLabel() : item.name }}\n\t\t\t\t</template>\n\t\t\t\t<template #append=\"{ item }\">\n\t\t\t\t\t<v-chip v-if=\"item.type\">{{ item.type }}</v-chip>\n\t\t\t\t</template>\n\t\t\t</v-treeview>\n\n\t\t\t<center>\n\t\t\t\t<v-btn v-show=\"active.length === 0\" color=\"info\" class=\"mt-3\" :disabled=\"uiFrozen\" :elevation=\"1\" @click=\"refresh\">\n\t\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('button.refresh.caption') }}\n\t\t\t\t</v-btn>\n\t\t\t</center>\n\t\t</v-col>\n\n\t\t<v-col ref=\"rightContainer\" v-show=\"active.length !== 0\" cols=\"6\">\n\t\t\t<v-row class=\"my-1\">\n\t\t\t\t<v-col class=\"pt-4\">\n\t\t\t\t\tSelected node: {{ (active.length > 0) ? active[0] : 'None' }}\n\t\t\t\t</v-col>\n\t\t\t\t<v-col cols=\"auto\">\n\t\t\t\t\t<v-btn color=\"info\" :disabled=\"uiFrozen\" :elevation=\"1\" @click=\"refresh\">\n\t\t\t\t\t\t<v-icon class=\"mr-1\">mdi-refresh</v-icon> {{ $t('button.refresh.caption') }}\n\t\t\t\t\t</v-btn>\n\t\t\t\t</v-col>\n\t\t\t</v-row>\n\n\t\t\t<v-alert :value=\"apiFileError !== null\" outlined type=\"warning\">\n\t\t\t\tDocumentation is not available (/www/DuetAPI.xml not found)\n\t\t\t</v-alert>\n\n\t\t\t<v-card v-show=\"apiDocumentation !== null\" outlined class=\"pa-3\">\n\t\t\t\t<template v-if=\"apiDocumentationSummary !== null\">\n\t\t\t\t\t<h4>Summary</h4>\n\t\t\t\t\t<span v-html=\"apiDocumentationSummary\"></span>\n\t\t\t\t</template>\n\n\t\t\t\t<template v-if=\"apiDocumentationRemarks !== null\">\n\t\t\t\t\t<br v-if=\"apiDocumentationSummary !== null\">\n\t\t\t\t\t<h4>Remarks</h4>\n\t\t\t\t\t<span v-html=\"apiDocumentationRemarks\"></span>\n\t\t\t\t</template>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\n'use strict'\n\nimport { mapState, mapGetters, mapActions } from 'vuex'\n\n// List of regexs to resolve properties in the XML documentation.\n// It's a shame the C# XML compiler doesn't include the property types...\nconst propertyAdjustments = [\n\t{ pattern: /(\\[\\d+\\])+$/g, substitute: '' },\n\t{ pattern: /s\\[\\d+\\]/g, substitute: '' },\n\t{ pattern: /.+\\.mcutemp\\./, substitute: 'minmaxcurrent`1.' },\n\t{ pattern: /.+\\.v12\\./, substitute: 'minmaxcurrent`1.' },\n\t{ pattern: /.+\\.vin\\./, substitute: 'minmaxcurrent`1.' },\n\t{ pattern: 'fan.thermostatic', substitute: 'fanthermostaticcontrol' },\n\t{ pattern: /^input\\./, substitute: 'inputchannel.' },\n\t{ pattern: 'heat.heater.model.pid.', substitute: 'heatermodelpid.' },\n\t{ pattern: 'job.file.', substitute: 'parsedfileinfo.' },\n\t{ pattern: 'parsedfileinfo.thumbnail.', substitute: 'parsedthumbnail.' },\n\t{ pattern: 'move.axe.', substitute: 'axis.' },\n\t{ pattern: /^move.calibration.(final|initial)./, substitute: 'movedeviations.' },\n\t{ pattern: 'move.idle.', substitute: 'motorsidlecontrol.' },\n\t{ pattern: /^move.queue\\[\\d+\\]\\./, substitute: 'movequeueitem.' },\n\t{ pattern: /^sensors.analog\\[\\d+\\]\\./, substitute: 'analogsensor.' },\n\t{ pattern: /^sensors.gpin\\[\\d+\\]\\./, substitute: 'gpinputport.' },\n\t{ pattern: /^state.gpout\\[\\d+\\]\\./, substitute: 'gpoutputport.' },\n];\n\nexport default {\n\tcomputed: {\n\t\t...mapState('machine', ['model']),\n\t\t...mapGetters(['uiFrozen']),\n\t\tapiDocumentation() {\n\t\t\tif (this.apiFile !== null && this.active.length > 0) {\n\t\t\t\tlet selectedNode = this.active[0].toLowerCase();\n\t\t\t\tpropertyAdjustments.forEach(item => selectedNode = selectedNode.replace(item.pattern, item.substitute));\n\t\t\t\t// NOTE: If kinematics properties are queried, they may need require treatment here\n\n\t\t\t\tconst propertyNames = [selectedNode], segments = selectedNode.split('.');\n\t\t\t\tif (segments.length > 2) {\n\t\t\t\t\tpropertyNames.push(`${segments[0]}${segments[1]}.${segments.slice(2).reduce((a, b) => a + '.' + b)}`);\n\t\t\t\t\tpropertyNames.push(segments.slice(1).reduce((a, b) => a + '.' + b));\n\t\t\t\t\tif (segments.length > 3) {\n\t\t\t\t\t\tpropertyNames.push(`${segments[0]}${segments[1]}${segments[2]}.${segments.slice(3).reduce((a, b) => a + '.' + b)}`);\n\t\t\t\t\t\tpropertyNames.push(segments.slice(2).reduce((a, b) => a + '.' + b));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.log('>> searching');\n\t\t\t\tconst members = this.apiFile.documentElement.getElementsByTagName('member');\n\t\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\t\tconsole.log(propertyName);\n\n\t\t\t\t\tfor (let k = 0; k < members.length; k++) {\n\t\t\t\t\t\tconst node = members[k], tagName = node.getAttribute('name');\n\t\t\t\t\t\tif (tagName.startsWith('P:') && tagName.toLowerCase().endsWith(propertyName)) {\n\t\t\t\t\t\t\tconsole.log(node);\n\t\t\t\t\t\t\treturn node;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tapiDocumentationSummary() {\n\t\t\tif (this.apiDocumentation !== null) {\n\t\t\t\tconst nodes = this.apiDocumentation.getElementsByTagName('summary');\n\t\t\t\treturn (nodes.length > 0) ? nodes[0].textContent.replace(/\\n/g, '<br>') : null;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tapiDocumentationRemarks() {\n\t\t\tif (this.apiDocumentation !== null) {\n\t\t\t\tconst nodes = this.apiDocumentation.getElementsByTagName('remarks');\n\t\t\t\treturn (nodes.length > 0) ? nodes[0].textContent.replace(/\\n/g, '<br>') : null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tactive: [],\n\t\t\tmodelTree: [],\n\t\t\tapiFile: null,\n\t\t\tapiFileError: null,\n\t\t\tdocumentationFloating: false\n\t\t}\n\t},\n\tasync activated() {\n\t\tif (this.apiFile === null) {\n\t\t\ttry {\n\t\t\t\tconst apiFileContent = await this.download({\n\t\t\t\t\tfilename: '0:/www/DuetAPI.xml',\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tshowError: false,\n\t\t\t\t\tshowSuccess: false\n\t\t\t\t});\n\n\t\t\t\tconst parser = new DOMParser();\n\t\t\t\tthis.apiFile = parser.parseFromString(apiFileContent, 'application/xml');\n\t\t\t\tthis.apiFileError = null;\n\t\t\t} catch (e) {\n\t\t\t\tthis.apiFileError = e.toString();\n\t\t\t\tconsole.warn(e);\n\t\t\t}\n\t\t}\n\t\tthis.refresh();\n\t},\n\tmethods: {\n\t\t...mapActions('machine', ['download']),\n\t\tmakeModelTree(obj, path) {\n\t\t\tif (obj instanceof Array) {\n\t\t\t\treturn obj.map(function(item, index) {\n\t\t\t\t\tconst itemPath = path.slice(0);\n\t\t\t\t\titemPath[itemPath.length - 1] += `[${index}]`;\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: itemPath.join('.'),\n\t\t\t\t\t\tgetLabel: () => this.getItemLabel(index, item),\n\t\t\t\t\t\ttype: this.getItemType(item),\n\t\t\t\t\t\tchildren: this.makeModelTree(item, itemPath)\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t}\n\t\t\tif (obj !== null && obj instanceof Object) {\n\t\t\t\treturn Object.keys(obj)\n\t\t\t\t\t.filter(key => (path.length > 0) || (obj[key] !== null))\n\t\t\t\t\t.map(function(key) {\n\t\t\t\t\t\tconst itemPath = path.slice(0);\n\t\t\t\t\t\titemPath.push(key);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: itemPath.join('.'),\n\t\t\t\t\t\t\tgetLabel: () => this.getItemLabel(key, obj[key]),\n\t\t\t\t\t\t\ttype: this.getItemType(obj[key]),\n\t\t\t\t\t\t\tchildren: this.makeModelTree(obj[key], itemPath)\n\t\t\t\t\t\t};\n\t\t\t\t\t}, this);\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tgetItemLabel(name, value) {\n\t\t\ttry {\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn `${name} = null`;\n\t\t\t\t}\n\t\t\t\tif ((value || value === '') && value.constructor === String) {\n\t\t\t\t\treturn `${name} = \"${value}\"`;\n\t\t\t\t}\n\t\t\t\tif (value instanceof Object) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\treturn `${name} = ${value}`;\n\t\t\t} catch {\n\t\t\t\treturn `${name} = ${this.$t('generic.noValue')}`;\n\t\t\t}\n\t\t},\n\t\tgetItemType(obj) {\n\t\t\tif (obj instanceof Array) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\tif (obj !== null && obj instanceof Object) {\n\t\t\t\treturn 'object';\n\t\t\t}\n\t\t\treturn 'value';\n\t\t},\n\t\trefresh() {\n\t\t\tthis.modelTree = this.makeModelTree(this.model, []);\n\t\t},\n\t\tonScroll() {\n\t\t\tconst documentationTop = this.$refs.rightContainer.getBoundingClientRect().y;\n\t\t\tif (this.$refs.leftContainer.getBoundingClientRect().y === documentationTop && documentationTop < 64) {\n\t\t\t\tthis.$refs.rightContainer.style.paddingTop = `${-documentationTop + 60}px`;\n\t\t\t} else {\n\t\t\t\tthis.$refs.rightContainer.style.paddingTop = '0px';\n\t\t\t}\n\t\t}\n\t},\n\twatch: {\n\t\tactive(to) {\n\t\t\tif (to.length > 0) {\n\t\t\t\tthis.$nextTick(this.onScroll);\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-row',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onScroll),expression:\"onScroll\"}]},[_c('v-col',{ref:\"leftContainer\",attrs:{\"cols\":(_vm.active.length === 0) ? 12 : 6}},[_c('v-treeview',{attrs:{\"items\":_vm.modelTree,\"open-on-click\":\"\",\"activatable\":\"\",\"active\":_vm.active},on:{\"update:active\":function($event){_vm.active=$event}},scopedSlots:_vm._u([{key:\"label\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.getLabel ? item.getLabel() : item.name)+\" \")]}},{key:\"append\",fn:function(ref){\nvar item = ref.item;\nreturn [(item.type)?_c('v-chip',[_vm._v(_vm._s(item.type))]):_vm._e()]}}])}),_c('center',[_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.active.length === 0),expression:\"active.length === 0\"}],staticClass:\"mt-3\",attrs:{\"color\":\"info\",\"disabled\":_vm.uiFrozen,\"elevation\":1},on:{\"click\":_vm.refresh}},[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-refresh\")]),_vm._v(\" \"+_vm._s(_vm.$t('button.refresh.caption'))+\" \")],1)],1)],1),_c('v-col',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.active.length !== 0),expression:\"active.length !== 0\"}],ref:\"rightContainer\",attrs:{\"cols\":\"6\"}},[_c('v-row',{staticClass:\"my-1\"},[_c('v-col',{staticClass:\"pt-4\"},[_vm._v(\" Selected node: \"+_vm._s((_vm.active.length > 0) ? _vm.active[0] : 'None')+\" \")]),_c('v-col',{attrs:{\"cols\":\"auto\"}},[_c('v-btn',{attrs:{\"color\":\"info\",\"disabled\":_vm.uiFrozen,\"elevation\":1},on:{\"click\":_vm.refresh}},[_c('v-icon',{staticClass:\"mr-1\"},[_vm._v(\"mdi-refresh\")]),_vm._v(\" \"+_vm._s(_vm.$t('button.refresh.caption'))+\" \")],1)],1)],1),_c('v-alert',{attrs:{\"value\":_vm.apiFileError !== null,\"outlined\":\"\",\"type\":\"warning\"}},[_vm._v(\" Documentation is not available (/www/DuetAPI.xml not found) \")]),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.apiDocumentation !== null),expression:\"apiDocumentation !== null\"}],staticClass:\"pa-3\",attrs:{\"outlined\":\"\"}},[(_vm.apiDocumentationSummary !== null)?[_c('h4',[_vm._v(\"Summary\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.apiDocumentationSummary)}})]:_vm._e(),(_vm.apiDocumentationRemarks !== null)?[(_vm.apiDocumentationSummary !== null)?_c('br'):_vm._e(),_c('h4',[_vm._v(\"Remarks\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.apiDocumentationRemarks)}})]:_vm._e()],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","import { render, staticRenderFns } from \"./ObjectModelBrowser.vue?vue&type=template&id=d415ae38&\"\nimport script from \"./ObjectModelBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./ObjectModelBrowser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VAlert,VBtn,VCard,VChip,VCol,VIcon,VRow,VTreeview})\n\n\n/* vuetify-loader */\nimport installDirectives from \"!../../../node_modules/vuetify-loader/lib/runtime/installDirectives.js\"\nimport Scroll from 'vuetify/lib/directives/scroll'\ninstallDirectives(component, {Scroll})\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"d3be3814-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ObjectModelBrowser.vue?vue&type=template&id=d415ae38&\"","'use strict'\n\nimport { registerRoute } from '../../routes'\n\nimport ObjectModelBrowser from './ObjectModelBrowser.vue'\n\n// Register a route via Settings -> Object Model\nregisterRoute(ObjectModelBrowser, {\n\tSettings: {\n\t\tObjectModel: {\n\t\t\ticon: 'mdi-file-tree',\n\t\t\tcaption: 'plugins.objectModelBrowser.menuCaption',\n\t\t\tpath: '/ObjectModel'\n\t\t}\n\t}\n});\n"],"sourceRoot":""}